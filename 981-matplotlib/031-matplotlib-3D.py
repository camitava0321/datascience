# -*- coding: utf-8 -*-
"""
Created on Tue Feb 27 13:57:09 2018

@author: Amitava Chakraborty
3D Plotting
"""
"""
In Matplotlib some three-dimensional plotting utilities were built on top of 2D display, 
to provide a set of tools for 3D data visualization. 
3D plots are enabled by importing the mplot3d toolkit, included with the Matplotlib package.
"""

from mpl_toolkits import mplot3d
import numpy as np
import matplotlib.pyplot as plt

fig = plt.figure()
# We create 3D axes by passing the keyword projection='3d' to any of the normal axes creation routines.
ax = plt.axes(projection='3d')
z = np.linspace(0, 1, 100)
x = z * np.sin(20 * z)
y = z * np.cos(20 * z)
ax.plot3D(x, y, z, 'gray')
ax.set_title('3D line plot')
plt.show()

#%% - 

#We can plot a variety of 3D plot types. 
#The most basic 3D plot is a 3D line plot created from sets of (x, y, z) triples. 
#This can be created using the ax.plot3D function.
#3D scatter plot is generated by using the ax.scatter3D function.

fig = plt.figure()
ax = plt.axes(projection='3d')
z = np.linspace(0, 1, 100)
x = z * np.sin(20 * z)
y = z * np.cos(20 * z)
c = x + y
ax.scatter(x, y, z, c=c)
ax.set_title('3d Scatter plot')
plt.show()